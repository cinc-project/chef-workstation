#!/bin/sh
#
# Perform necessary removal steps
# after package is uninstalled.
#

is_darwin()
{
  uname -a | grep "^Darwin" 2>&1 >/dev/null
}

cleanup_symlinks() {
  # Keep removed symlinks in this list, so that removal of upgraded packages still cleans up
  # leftovers from older versions.
  workstation_binaries="berks chef chef-cli cinc-apply cinc-shell cinc-solo chef-vault cookstyle dco delivery foodcritic cinc-auditor kitchen knife ohai push-apply pushy-client pushy-service-manager cinc-client"
  binaries="chef-run chef-workstation-app $workstation_binaries chef-analyze hab"

  for binary in $binaries; do
    rm -f "$PREFIX/bin/$binary"
  done

  wrapper_links="chef-apply chef-client chef-shell chef-solo inspec"
  link_target="cinc-wrapper"
  for link in $wrapper_links;  do
    if [ -L $PREFIX/bin/$link -a "$(readlink $PREFIX/bin/$link)" = "$INSTALLER_DIR/bin/$link_target" ]; then
      echo "Removing $link compatibility symlink..."
      rm -f $PREFIX/bin/$link
    fi
  done
}

if is_darwin; then
    PREFIX="/usr/local"
    mkdir -p "$PREFIX/bin"
else
    PREFIX="/usr"
fi

# Clean up binary symlinks if they exist
# see: http://tickets.opscode.com/browse/CHEF-3022
if [ ! -f /etc/redhat-release -a ! -f /etc/fedora-release -a ! -f /etc/system-release ]; then
  # not a redhat-ish RPM-based system
  cleanup_symlinks
elif [ "x$1" = "x0" ]; then
  # RPM-based system and we're uninstalling rather than upgrading
  cleanup_symlinks
fi

exit 0
