#!/bin/sh
#
# Perform necessary setup steps
# after package is installed.
#

PROGNAME=`basename $0`
INSTALLER_DIR=/opt/cinc-workstation

error_exit()
{
  echo "${PROGNAME}: ${1:-"Unknown Error"}" 1>&2
  exit 1
}

is_darwin()
{
  uname -v | grep "^Darwin" >/dev/null 2>&1
}

if is_darwin; then
    PREFIX="/usr/local"
    mkdir -p "$PREFIX/bin"
else
    PREFIX="/usr"
fi

binaries="chef-run berks chef chef-cli chef-analyze cinc-apply cinc-shell cinc-solo chef-vault cookstyle delivery foodcritic cinc-auditor kitchen knife ohai push-apply pushy-client pushy-service-manager cinc-client"

for binary in $binaries; do
  ln -sf "$INSTALLER_DIR/bin/$binary" $PREFIX/bin || error_exit "Cannot link $binary to $PREFIX/bin"
done

wrapper_links="chef-apply chef-client chef-shell chef-solo inspec"
link_target="cinc-wrapper"
for link in $wrapper_links; do
  if [ ! -e $PREFIX/bin/$link ]; then
    echo "Symlinking $link command to cinc-wrapper for compatibility..."
    ln -sf $INSTALLER_DIR/bin/$link_target $PREFIX/bin/$link || error_exit "Cannot link $link_target to $PREFIX/bin/$link"
  fi
done

if is_darwin; then
  # the app launcher comes from the chef-workstation-app repo, here we are just using
  # it to start the app as a service on MacOS systems, it will start at boot
  app_launcher=chef_workstation_app_launcher

  # Close the app if it is running.
  if [ $(osascript -e 'application "Chef Workstation App" is running') = 'true' ]; then
    echo "Closing Chef Workstation App..."
    osascript -e 'quit app "Chef Workstation App"' > /dev/null 2>&1;
  fi
  # chef-workstation-app is configured to build Mac as a zip file instead
  # of a directory. Otherwise, the mac pkgbuild command will find the Chef Workstation App
  # within the larger Chef Workstatoin package, and will not include it in the Chef Workstation
  # package directly.
  echo "Moving Chef Workstation App to the Applications folder"
  pushd "$INSTALLER_DIR/components/chef-workstation-app"
  unzip chef-workstation-app-mac.zip
  sudo rm -rf "/Applications/Chef Workstation App.app"
  sudo mv "Chef Workstation App.app" /Applications/
  mv "/Applications/Chef Workstation App.app/Contents/Resources/assets/scripts/$app_launcher" $INSTALLER_DIR/bin || error_exit "Cannot move $app_launcher to $INSTALLER_DIR/bin"
  rm -f chef-workstation-app-mac.zip
  popd

  ln -sf $INSTALLER_DIR/bin/uninstall_chef_workstation $PREFIX/bin || error_exit "Cannot link uninstall_chef_workstation to $PREFIX/bin"

  # Restart the app if it was running.
  echo "Restarting Chef Workstation App..."
  su "$USER" $INSTALLER_DIR/bin/$app_launcher load
else # linux - postinst does not run for windows.
  cwa_app_path="$INSTALLER_DIR/components/chef-workstation-app/chef-workstation-app"
  ldd "$cwa_app_path" | grep "not found" >/dev/null 2>&1
  # 0 rc means grep found 'not found' text - and we have missing deps.
  if [ $? -eq 0 ]; then
    echo ""
    echo "To run the Cinc Workstation App, use your"
    echo "platform's package manager to install these dependencies:"
    echo ""
    ldd "$cwa_app_path" | grep "not found" 2>&1
    echo "You can then launch the App by running 'cinc-workstation-app'."
    echo "The App will then be available in the system tray."
  else
    echo ""
    echo "The Cinc Workstation App is available for you to try."
    echo ""
    echo "Launch the App by running 'cinc-workstation-app'."
    echo "The App will then be available in the system tray."
  fi
  ln -sf $cwa_app_path $PREFIX/bin
fi

echo ""
echo "Thank you for installing Cinc Workstation!"
echo "You can find some tips on getting started at https://cinc.sh/"
echo ""
exit 0
